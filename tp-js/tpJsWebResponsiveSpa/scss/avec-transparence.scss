
/*
linear-gradient(black, white, ...) sert à construire une image 
avec des couleurs en dégradé du noir au blanc.
Etant donné que linear-gradient gère bien la transparence 
(coefficient d'opacité alpha) , on peut utiliser linear-gradient()
avec 2 fois la même couleur rgba(0, 0, 0, 0.5) pour obtenir un effet de transparence.
si coeff alpha proche de 0 très transparent.
si coeff alpha proche de 1 très opaque.
*/

.degradeDeBleu{
	background: linear-gradient(to bottom right, rgba(0, 0, 255, 0.9), rgba(255, 255, 255, 0.9));
	box-shadow: 4px 4px grey;
}

@mixin overImage($coeffAlpha,$urlImage) {
    background-color: #000000;
    background-image: linear-gradient(rgba(0, 0, 0, $coeffAlpha), rgba(0, 0, 0, $coeffAlpha)), url($urlImage);
    background-position: center;
    background-size: cover;
    color: #ffffff;
    padding: 1em;
    text-align: center;
  }

.overImage1 {
    @include overImage(0.5 , "../images/coucher_soleil.jpg" )
}

.overImage2 {
    @include overImage(0.3 , "../images/pont.jpg" )
}

/*
HSL signifie Hue, Saturation, Luminosity, 
c’est à dire Teinte, Saturation, Luminosité
https://la-cascade.io/utiliser-hsl-pour-vos-couleurs/
*/

@keyframes wheelHueColor {
    from, to { color: hsl(324, 70%, 45%); }
    10%      { color: hsl(360, 65%, 45%); }
    20%      { color: hsl( 36, 80%, 45%); }
    30%      { color: hsl( 72, 75%, 35%); }
    40%      { color: hsl(108, 65%, 35%); }
    50%      { color: hsl(144, 75%, 35%); }
    60%      { color: hsl(180, 75%, 35%); }
    70%      { color: hsl(216, 60%, 45%); }
    80%      { color: hsl(252, 65%, 50%); }
    90%      { color: hsl(288, 60%, 40%); }
}

.animTextColor {
    color: hsl(324, 70%, 45%);
    animation: wheelHueColor 60s infinite;
}

.animBackgroundColor {
	flex-flow: row wrap;
	align-items : center;
    color: hsl(324, 70%, 45%);
    animation: wheelHueColor 100s infinite;
	background-color : currentColor;
	background-image: linear-gradient(45deg, white 10%, black 90%);
    background-blend-mode: overlay;
}

/*

	
*/

.textOverAnimeBackColor{
	display: inline-block;
	flex: 1 1 auto;
	margin: 3em;
	text-align : center;
	background: rgba(0,0,0,0.75);
	padding: 1em;
	animation: inherit;
}